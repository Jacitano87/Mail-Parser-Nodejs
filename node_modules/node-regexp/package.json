{
  "name": "node-regexp",
  "description": "New RegExp Style for Node.js",
  "version": "0.1.1",
  "homepage": "https://github.com/yuanyan/node-regexp",
  "author": {
    "name": "yuanyan",
    "url": "https://github.com/yuanyan"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/yuanyan/node-regexp.git"
  },
  "bugs": {
    "url": "https://github.com/yuanyan/node-regexp/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/yuanyan/node-regexp/blob/master/MIT-LICENSE.txt"
    }
  ],
  "bin": "",
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "dependencies": {},
  "devDependencies": {},
  "keywords": [],
  "readme": "node-regexp\r\n===\r\n\r\nNew RegExp Style for Node.js\r\n\r\n## Install\r\n```sh\r\n$ npm install node-regexp\r\n```\r\n\r\n## API\r\n\r\n### Methods\r\n```js\r\nvar regexp = require('node-regexp')\r\nvar re = regexp().\r\n  .start('str')        // must start str\r\n  .maybe('str')        // maybe match str\r\n  .atleast(3)          // atleast match 3 times\r\n  .must('str')         // must match str\r\n  .has(1, 5)           // should have 1 to 5\r\n  .either('str1', 'str2', 'str3') // either str1, str2, str3\r\n  .find('str')         // capture match\r\n  .anythingBut('str')  // anything match but str\r\n  .somethingBut('str') // something match but str\r\n  .end('str')          // match end str\r\n  .global()            // global match\r\n  .ignoreCase()        // ignore case match\r\n  .multiline()         // multiple lines match\r\n  .toRegExp()          // return a RegExp\r\n  .toString()          // return a String\r\n```\r\n\r\n### Vars\r\n```js\r\nvar regexp = require('node-regexp')\r\nregexp.number = \"[0-9]\"\r\nregexp.lower = \"[a-z]\"\r\nregexp.upper = \"[A-Z]\"\r\nregexp.letter = \"[a-zA-Z]\"\r\nregexp.tab = \"\\\\t\"\r\nregexp.space = \"\\\\s\"\r\nregexp.word = \"\\\\w\"\r\nregexp.digit = \"\\\\d\"\r\nregexp.newline = \"\\\\n\"\r\nregexp.return = \"\\\\r\"\r\nregexp.eol = \"(?:(?:\\\\n)|(?:\\\\r\\\\n))\"\r\n```\r\n\r\n## Demo\r\n\r\n```js\r\nvar regexp = require('node-regexp')\r\nvar re = regexp()\r\n  .start('http')\r\n  .maybe('s')\r\n  .must('://')\r\n  .maybe('WWW.')\r\n  .somethingBut(regexp.space)\r\n  .end('.com')\r\n  .ignoreCase()\r\n  .toRegExp()\r\n\r\nre.test(\"http://qq.com\") // => true\r\nre.test(\"http://www.qq.com\") // => true\r\nre.test(\"https://www.qq.com\") // => true\r\nre.test(\"http://www.qqcom\") // => false\r\nre.test(\"https://www.qq.net\") // => false\r\n```",
  "readmeFilename": "README.md",
  "_id": "node-regexp@0.1.1",
  "dist": {
    "shasum": "b77a09dea56263a3fa6f9ea30d71047e1b1a0a2b",
    "tarball": "http://registry.npmjs.org/node-regexp/-/node-regexp-0.1.1.tgz"
  },
  "_from": "node-regexp@*",
  "_npmVersion": "1.2.18",
  "_npmUser": {
    "name": "yuanyan",
    "email": "yuanyan.cao@gmail.com"
  },
  "maintainers": [
    {
      "name": "yuanyan",
      "email": "yuanyan.cao@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "b77a09dea56263a3fa6f9ea30d71047e1b1a0a2b",
  "_resolved": "https://registry.npmjs.org/node-regexp/-/node-regexp-0.1.1.tgz"
}
